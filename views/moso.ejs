<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mở Sổ</title>
    <link rel="stylesheet" href="./css/css_moso.css">
    <style>
        /* Popup  */
        .popup {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 300px;
            padding: 20px;
            background-color: white;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
            text-align: center;
            border-radius: 10px;
        }

        /* Hiển thị popup */
        .popup.show {
            display: block;
        }


        .overlay {
            display: none;
            position: fixed;
            z-index: 999;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
        }

        .overlay.show {
            display: block;
        }

        /* Nút đóng popup */
        .popup button {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: lightblue;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <header class="top-bar">
        <h1>Quản lý Sổ Tiết Kiệm</h1>
    </header>
    <section class="saving-account-form">
        <h2>MỞ SỔ TIẾT KIỆM</h2>
        <form id="savingForm">
            <div class="row">
                <label for="id">Mã sổ:</label>
                <input type="number" id="id" name="id" required>
                <label for="savingType">Loại tiết kiệm:</label>
                <!-- chon thay vi nhap -->

                <select id="loaiTietKiem" name="savingType" onchange="getType()">
                    <% for (var i=0; i < listOfTypes.length ; i++) { %>
                        <option value="<%= listOfTypes[i].id %>">
                            <%= listOfTypes[i].typename %>
                        </option>
                        <% } %>
                </select>
                <!-- <input type="text" id="savingType" name="savingType" required> -->
            </div>

            <div class="row">
                <label for="customer">Khách hàng:</label>
                <input type="text" id="customer" name="customer" required>
                <label for="cmnd">CMND:</label>
                <input type="text" id="cmnd" name="cmnd" required>
            </div>

            <div class="row">
                <label for="address">Địa chỉ:</label>
                <input type="text" id="address" name="address" required>
                <label for="openDate">Ngày mở sổ:</label>
                <input type="date" id="openDate" name="openDate" required>
            </div>

            <div class="row">
                <label for="amount">Số tiền gửi:</label>
                <input type="text" id="amount" name="amount" required placeholder="Nhập số tiền">
                <div id="error-message" style="color:red; font-size: 12px;"></div>
            </div>

            <div class="button-row">
                <button type="submit">Mở sổ</button>
                <button type="button" id="cancelBtn">Hủy</button>
            </div>
        </form>
    </section>
    <!-- Popup thông báo thành công -->
    <div class="overlay" id="overlay"></div>
    <div class="popup" id="popup">
        <p>Lưu thay đổi thành công!</p>
        <button id="closePopup">OK</button>
    </div>

    <!-- Popup xác nhận hủy -->
    <div class="overlay" id="cancelOverlay"></div>
    <div class="popup" id="cancelPopup">
        <p>Bạn có chắc chắn muốn hủy không?</p>
        <div class="button-row">
            <button id="closeCancelPopup">Không</button>
            <button id="confirmCancel">Hủy</button>
        </div>
    </div>


    <div class="popup" id="Error">
        <p>Mã sổ đã tồn tại</p>
        <button type="button" id="close">OK</button>
    </div>

</body>
<script>
    function formatNumberWithDots(number) {
        // Chuyển số thành chuỗi
        const a = number
        const numberString = a.toString();

        // Sử dụng biểu thức chính quy để thêm dấu chấm
        const formattedNumber = numberString.replace(/\B(?=(\d{3})+(?!\d))/g, ".");

        return formattedNumber;
    }
    // Định dạng số tiền nhap do co với dấu chấm
    function formatCurrency(input) {
        let value = input.replace(/\D/g, ''); // Loại bỏ ký tự không phải số
        return value.replace(/\B(?=(\d{3})+(?!\d))/g, '.'); // Thêm dấu chấm vào các nhóm 3 chữ số
    }

    // Kiểm tra số tiền không được ít hơn 100.000 đồng
    function validateAmount(value) {
        var minMoney = getType()
        let rawValue = value.replace(/\./g, ''); // Loại bỏ dấu chấm
        if (parseInt(rawValue) < minMoney) {
            return false; // Số tiền nhỏ hơn 100.000 đ
        }
        return true;
    }



    var myTypesList = <%- JSON.stringify(listOfTypes) %>;
    console.log(myTypesList)

    function getType() {
        var minMoney = 0;
        var type = document.getElementById('loaiTietKiem').value;

        for (var i = 0; i < myTypesList.length; i++) {
            if (type == myTypesList[i].id) {
                minMoney = Number(myTypesList[i].min_deposit_money);
                return minMoney
            }
        }


    }




    // Xử lý sự kiện khi người dùng nhập số tiền
    document.getElementById('amount').addEventListener('input', function (e) {

        let formattedValue = formatCurrency(this.value); // Định dạng lại số tiền
        this.value = formattedValue;

        let errorMessage = document.getElementById('error-message');
        var minMoney = getType()

        // Kiểm tra số tiền có hợp lệ không
        if (!validateAmount(this.value)) {
            errorMessage.textContent = `Số tiền gửi không được ít hơn ${formatNumberWithDots(minMoney)} đ `;
            document.querySelector('button[type="submit"]').disabled = true; // Vô hiệu hóa nút "Mở sổ"
        } else {
            errorMessage.textContent = '';
            document.querySelector('button[type="submit"]').disabled = false; // Bật lại nút "Mở sổ"
        }
    });

    //kiem tra so tien va cho submit sang 1 trang moi
    document.getElementById('savingForm').addEventListener('submit', function (event) {
        var minMoney = getType()

        let amountValue = document.getElementById('amount').value;

        // Kiểm tra số tiền trước khi submit
        if (!validateAmount(amountValue)) {
            event.preventDefault(); // Ngăn việc submit nếu số tiền không hợp lệ
            console.log(minMoney)
            alert(`Số tiền gửi không hợp lệ. Vui lòng nhập số tiền lớn hơn ${formatNumberWithDots(minMoney)} đ.`);
        } else {
            let form = event.target;
            let formData = new FormData(form);
            let queryString = new URLSearchParams(formData).toString()
            let formDataObject = {};

            event.preventDefault(); // Ngăn trình duyệt nạp lại trang

            formData.forEach((value, key) => {
                formDataObject[key] = value
            });
            console.log(formDataObject)

            let urlToSend = "./moso?" + queryString;

            fetch('/moso', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formDataObject)
            })
                .then((respone) => {
                    return respone.json()
                })
                .then(data => {
                    if (data.status == false) {
                        document.getElementById('Error').classList.add('show');
                        document.getElementById('overlay').classList.add('show');

                        document.getElementById('close').addEventListener('click', () => {
                            document.getElementById('Error').classList.remove('show');
                            document.getElementById('overlay').classList.remove('show');
                        })
                        //alert(data.message)
                    }
                    else {
                        document.getElementById('popup').classList.add('show');
                        document.getElementById('overlay').classList.add('show');
                    }

                })
                .catch(error => {
                    console.log(error)
                })
        }
    });


    // Đóng popup thành công
    document.getElementById('closePopup').addEventListener('click', function () {
        window.location.href = "HomePage";
    });

    // Xử lý sự kiện hủy
    document.getElementById('cancelBtn').addEventListener('click', function () {
        document.getElementById('cancelPopup').classList.add('show');
        document.getElementById('cancelOverlay').classList.add('show');
    });

    // Xác nhận hủy
    document.getElementById('confirmCancel').addEventListener('click', function () {
        window.location.href = "HomePage"; // Điều hướng về trang khác
    });

    // Đóng popup hủy
    document.getElementById('closeCancelPopup').addEventListener('click', function () {
        document.getElementById('cancelPopup').classList.remove('show');
        document.getElementById('cancelOverlay').classList.remove('show');
    });

</script>

</html>